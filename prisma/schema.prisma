// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// 用户模型
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          Role      @default(USER)
  
  // 关联
  articles      Article[]
  comments      Comment[]
  likes         Like[]
  bookmarks     Bookmark[]
  subscriptions Subscription[]
}

// 文章模型
model Article {
  id          String    @id @default(cuid())
  title       String
  description String?
  content     String
  sourceUrl   String?
  imageUrl    String?
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // 关联
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  tags        Tag[]
  comments    Comment[]
  likes       Like[]
  bookmarks   Bookmark[]
}

// 分类模型
model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  articles    Article[]
}



// 标签模型
model Tag {
  id          String    @id @default(cuid())
  name        String    @unique
  articles    Article[]
}

// 评论模型
model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // 关联
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  article   Article   @relation(fields: [articleId], references: [id])
  articleId String
}

// 点赞模型
model Like {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  
  // 关联
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  article   Article   @relation(fields: [articleId], references: [id])
  articleId String

  @@unique([userId, articleId])
}

// 收藏模型
model Bookmark {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  
  // 关联
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  article   Article   @relation(fields: [articleId], references: [id])
  articleId String

  @@unique([userId, articleId])
}

// 订阅模型
model Subscription {
  id        String    @id @default(cuid())
  frequency String    @default("DAILY") // DAILY, WEEKLY, MONTHLY
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  // 关联
  user      User      @relation(fields: [userId], references: [id])
  userId    String
}

enum Role {
  USER
  ADMIN
}